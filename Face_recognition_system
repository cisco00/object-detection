{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.8"
    },
    "toc": {
      "base_numbering": 1,
      "nav_menu": {},
      "number_sections": true,
      "sideBar": true,
      "skip_h1_title": false,
      "title_cell": "Table of Contents",
      "title_sidebar": "Contents",
      "toc_cell": false,
      "toc_position": {},
      "toc_section_display": true,
      "toc_window_display": false
    },
    "colab": {
      "name": "find_your_celebrity_lookalike_with_computer_vision_594.ipynb",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/cisco00/object-detection/blob/main/Face_recognition_system\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OMrO7Dmce37e"
      },
      "source": [
        "!mkdir ../lookalikeceleb/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1pCi7bLNe37p"
      },
      "source": [
        "import face_recognition\n",
        "import os\n",
        "import numpy as np\n",
        "from IPython.display import Image\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.image as mpimg\n",
        "from matplotlib import rcParams\n",
        "%matplotlib inline"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zbyP-oHIe37q"
      },
      "source": [
        "def load_images(known_images_dir):\n",
        "    known_encodings = []\n",
        "    known_images = []\n",
        "\n",
        "    for file in os.listdir(known_images_dir):\n",
        "        #fsdecode function decode the file into filename\n",
        "        filename = os.fsdecode(file)\n",
        "        image = face_recognition.load_image_file(os.path.join(known_images_dir, filename))\n",
        "\n",
        "        enc = face_recognition.face_encodings(image)\n",
        "        if len(enc) > 0:\n",
        "            known_encodings.append(enc[0])\n",
        "            known_images.append(filename)\n",
        "        \n",
        "    return (known_encodings, known_images)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bwaadXW0e37q"
      },
      "source": [
        "##### calculating the distance btw the two pics to know the similarity "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LCXzaYrQe37r"
      },
      "source": [
        "def calculate_face_distance(known_encodings, unknown_img_path, cutoff=0.5, num_results=4):\n",
        "    image_to_test = face_recognition.load_image_file(unknown_img_path)\n",
        "    image_to_test_encoding = face_recognition.face_encodings(image_to_test)[0]\n",
        "\n",
        "    face_distances = face_recognition.face_distance(known_encodings, image_to_test_encoding)\n",
        "    return (unknown_img_path, known_images[face_distances.argmin()])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kb82VR8re37r"
      },
      "source": [
        "##### uploading image of celebrity"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bmSmnDYwe37s"
      },
      "source": [
        "known_encodings, known_images = load_images(\"/cxldata/projects/lookalikeceleb/images\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jz0wwmR_e37s"
      },
      "source": [
        "##### uploading image of me"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YdGObmrse37t"
      },
      "source": [
        "original_image = \"../lookalikeceleb/myimage.jpg\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "modChLrwe37t"
      },
      "source": [
        "###### calculating distance for similarities"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QRniQbKke37t"
      },
      "source": [
        "matching_image = calculate_face_distance(known_encodings, original_image)[1]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kBbHfk7ne37u"
      },
      "source": [
        "##### reading images to checking for facial similarity  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JQm_25c2e37u"
      },
      "source": [
        "img_1 = mpimg.imread(original_image)\n",
        "img_2 = mpimg.imread('/cxldata/projects/lookalikeceleb/images/' + matching_image)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s-l6tbKre37u"
      },
      "source": [
        "##### displaying images"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xhFxmkG6e37v"
      },
      "source": [
        "fig, ax = plt.subplots(1,2)\n",
        "\n",
        "ax[0].imshow(img_1)\n",
        "ax[1].imshow(img_1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7lc2fbW1e37v"
      },
      "source": [
        "print('Hey boy you look like' + os.path.split(match_image)[0] + '!')"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}